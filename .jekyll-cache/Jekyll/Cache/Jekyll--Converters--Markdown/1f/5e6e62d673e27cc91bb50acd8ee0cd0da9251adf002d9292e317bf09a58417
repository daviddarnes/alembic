I"Ð8<p>Alembic is a starting point for <a href="https://jekyllrb.com/">Jekyll</a> projects. Rather than starting from scratch, this boilerplate is designed to get the ball rolling immediately. Install it, configure it, tweak it, push it.</p>

<!-- Navigation -->
<nav class="navbar navbar-default navbar-custom navbar-fixed-top">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header page-scroll">
            <button type="button" class="navbar-toggle">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">Joephy's World</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div id="huxblog_navbar">
            <div class="navbar-collapse">
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a href="/">Home</a>
                    </li>
                    
                    <li>
                        <a href="/Experience/">Experience</a>
                    </li>
                    
                    <li>
                        <a href="/">About Alembic</a>
                    </li>
                    
                    <li>
                        <a href="/tags/">Tags</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <!-- /.navbar-collapse -->
    </div>
    <!-- /.container -->
</nav>
<script>
    // Drop Bootstarp low-performance Navbar
    // Use customize navbar with high-quality material design animation
    // in high-perf jank-free CSS3 implementation
    var $body   = document.body;
    var $toggle = document.querySelector('.navbar-toggle');
    var $navbar = document.querySelector('#huxblog_navbar');
    var $collapse = document.querySelector('.navbar-collapse');

    var __HuxNav__ = {
        close: function(){
            $navbar.className = " ";
            // wait until animation end.
            setTimeout(function(){
                // prevent frequently toggle
                if($navbar.className.indexOf('in') < 0) {
                    $collapse.style.height = "0px"
                }
            },400)
        },
        open: function(){
            $collapse.style.height = "auto"
            $navbar.className += " in";
        }
    }

    // Bind Event
    $toggle.addEventListener('click', function(e){
        if ($navbar.className.indexOf('in') > 0) {
            __HuxNav__.close()
        }else{
            __HuxNav__.open()
        }
    })

    /**
     * Since Fastclick is used to delegate 'touchstart' globally
     * to hack 300ms delay in iOS by performing a fake 'click',
     * Using 'e.stopPropagation' to stop 'touchstart' event from 
     * $toggle/$collapse will break global delegation.
     * 
     * Instead, we use a 'e.target' filter to prevent handler
     * added to document close HuxNav.  
     *
     * Also, we use 'click' instead of 'touchstart' as compromise
     */
    document.addEventListener('click', function(e){
        if(e.target == $toggle) return;
        if(e.target.className == 'icon-bar') return;
        __HuxNav__.close();
    })
</script>

<p><!-- Navigation --></p>
<nav class="navbar navbar-default navbar-custom navbar-fixed-top">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header page-scroll">
            <button type="button" class="navbar-toggle">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">Joephy's World</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div id="huxblog_navbar">
            <div class="navbar-collapse">
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a href="/">Home</a>
                    </li>
                    
                    <li>
                        <a href="/Experience/">Experience</a>
                    </li>
                    
                    <li>
                        <a href="/">About Alembic</a>
                    </li>
                    
                    <li>
                        <a href="/tags/">Tags</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <!-- /.navbar-collapse -->
    </div>
    <!-- /.container -->
</nav>
<script>
    // Drop Bootstarp low-performance Navbar
    // Use customize navbar with high-quality material design animation
    // in high-perf jank-free CSS3 implementation
    var $body   = document.body;
    var $toggle = document.querySelector('.navbar-toggle');
    var $navbar = document.querySelector('#huxblog_navbar');
    var $collapse = document.querySelector('.navbar-collapse');

    var __HuxNav__ = {
        close: function(){
            $navbar.className = " ";
            // wait until animation end.
            setTimeout(function(){
                // prevent frequently toggle
                if($navbar.className.indexOf('in') < 0) {
                    $collapse.style.height = "0px"
                }
            },400)
        },
        open: function(){
            $collapse.style.height = "auto"
            $navbar.className += " in";
        }
    }

    // Bind Event
    $toggle.addEventListener('click', function(e){
        if ($navbar.className.indexOf('in') > 0) {
            __HuxNav__.close()
        }else{
            __HuxNav__.open()
        }
    })

    /**
     * Since Fastclick is used to delegate 'touchstart' globally
     * to hack 300ms delay in iOS by performing a fake 'click',
     * Using 'e.stopPropagation' to stop 'touchstart' event from 
     * $toggle/$collapse will break global delegation.
     * 
     * Instead, we use a 'e.target' filter to prevent handler
     * added to document close HuxNav.  
     *
     * Also, we use 'click' instead of 'touchstart' as compromise
     */
    document.addEventListener('click', function(e){
        if(e.target == $toggle) return;
        if(e.target.className == 'icon-bar') return;
        __HuxNav__.close();
    })
</script>

<p><!-- Navigation --></p>
<nav class="navbar navbar-default navbar-custom navbar-fixed-top">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header page-scroll">
            <button type="button" class="navbar-toggle">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">Joephy's World</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div id="huxblog_navbar">
            <div class="navbar-collapse">
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a href="/">Home</a>
                    </li>
                    
                    <li>
                        <a href="/Experience/">Experience</a>
                    </li>
                    
                    <li>
                        <a href="/">About Alembic</a>
                    </li>
                    
                    <li>
                        <a href="/tags/">Tags</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <!-- /.navbar-collapse -->
    </div>
    <!-- /.container -->
</nav>
<script>
    // Drop Bootstarp low-performance Navbar
    // Use customize navbar with high-quality material design animation
    // in high-perf jank-free CSS3 implementation
    var $body   = document.body;
    var $toggle = document.querySelector('.navbar-toggle');
    var $navbar = document.querySelector('#huxblog_navbar');
    var $collapse = document.querySelector('.navbar-collapse');

    var __HuxNav__ = {
        close: function(){
            $navbar.className = " ";
            // wait until animation end.
            setTimeout(function(){
                // prevent frequently toggle
                if($navbar.className.indexOf('in') < 0) {
                    $collapse.style.height = "0px"
                }
            },400)
        },
        open: function(){
            $collapse.style.height = "auto"
            $navbar.className += " in";
        }
    }

    // Bind Event
    $toggle.addEventListener('click', function(e){
        if ($navbar.className.indexOf('in') > 0) {
            __HuxNav__.close()
        }else{
            __HuxNav__.open()
        }
    })

    /**
     * Since Fastclick is used to delegate 'touchstart' globally
     * to hack 300ms delay in iOS by performing a fake 'click',
     * Using 'e.stopPropagation' to stop 'touchstart' event from 
     * $toggle/$collapse will break global delegation.
     * 
     * Instead, we use a 'e.target' filter to prevent handler
     * added to document close HuxNav.  
     *
     * Also, we use 'click' instead of 'touchstart' as compromise
     */
    document.addEventListener('click', function(e){
        if(e.target == $toggle) return;
        if(e.target.className == 'icon-bar') return;
        __HuxNav__.close();
    })
</script>

<h2 id="features">Features</h2>

<ul>
  <li>Available as a starter kit or as <a href="http://jekyllrb.com/docs/themes/">Jekyll 3.3 theme gem</a></li>
  <li>Tested in all major browsers, that includes IE as well as Edge</li>
  <li>Extensive set of shortcodes to include various elements; such as buttons, icons, figure images and more</li>
  <li>Solid typographic framework from <a href="https://sassline.com/">Sassline</a></li>
  <li>Configurable navigation via a single file</li>
  <li>Modular Jekyll components</li>
  <li>Easily interchangeable sidebar</li>
  <li>Post category support in the form of a single post index page grouped by category</li>
  <li>Built in live search using JavaScript</li>
  <li>Contact form built in using <a href="https://formspree.io/">Formspree</a></li>
  <li>Works on <a href="https://pages.github.com/">GitHub Pages</a> out of the box</li>
  <li>Built with <a href="https://jekyllrb.com/">Jekyll</a> 3.3</li>
  <li>Designed with <a href="http://www.siteleaf.com/">Siteleaf</a> in mind</li>
  <li>Has 9 of the most popular networks as performant sharing buttons</li>
  <li>Has documentation</li>
</ul>

<h2 id="examples">Examples</h2>

<p>Here are a few examples of Alembic out in the wild being used in a variety of ways:</p>

<ul>
  <li><a href="https://bitpodcast.com/">bitpodcast.com</a></li>
  <li><a href="http://katiesimonemusic.com/">katiesimonemusic.com</a></li>
  <li><a href="https://joelcagedesign.com/">joelcagedesign.com</a></li>
  <li><a href="https://bawejakunal.github.io/">bawejakunal.github.io</a></li>
  <li><a href="http://case2111.github.io/">case2111.github.io</a></li>
  <li><a href="http://www.10people.co.uk/">www.10people.co.uk</a></li>
  <li><a href="http://hrkeni.me/">hrkeni.me</a></li>
  <li><a href="https://venuthatikonda.github.io/">venuthatikonda.github.io</a></li>
  <li><a href="https://ccs17.bsc.es/">ccs17.bsc.es</a></li>
</ul>

<h2 id="installation">Installation</h2>

<h3 id="as-a-boilerplate--fork">As a Boilerplate / Fork</h3>

<ol>
  <li><a href="https://github.com/daviddarnes/alembic#fork-destination-box">Fork the repo</a></li>
  <li>Clone down the repo with <code class="language-plaintext highlighter-rouge">$ git clone git@github.com:username/reponame.git</code></li>
  <li>Delete the <code class="language-plaintext highlighter-rouge">demo/</code> folder and <code class="language-plaintext highlighter-rouge">screenshot.png</code> files</li>
  <li>Change the <code class="language-plaintext highlighter-rouge">CNAME</code> record to your projectsâ record</li>
  <li>Install bundler with <code class="language-plaintext highlighter-rouge">$ gem install bundler</code></li>
  <li>Install gems with <code class="language-plaintext highlighter-rouge">$ bundle install</code></li>
  <li>Run Jekyll with <code class="language-plaintext highlighter-rouge">$ bundle exec jekyll serve --watch</code></li>
  <li>Begin hacking for your project</li>
</ol>

<h3 id="as-a-jekyll-33-theme-gem">As a Jekyll 3.3 theme gem</h3>

<ol>
  <li>Download the starter <code class="language-plaintext highlighter-rouge">/demo</code> content, <a href="https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/daviddarnes/alembic/tree/master/demo">quick download link</a></li>
  <li>Install bundler with <code class="language-plaintext highlighter-rouge">$ gem install bundler</code></li>
  <li>Install gems with <code class="language-plaintext highlighter-rouge">$ bundle install</code></li>
  <li>Run Jekyll with <code class="language-plaintext highlighter-rouge">$ bundle exec jekyll serve --watch</code></li>
  <li>Begin hacking for your project</li>
</ol>

<h3 id="boilerplate--theme-differences">Boilerplate &amp; Theme differences</h3>

<p>The boilerplate kit is better for more drastic hacking and changes, a project thatâs quite different to any other and needs a lot of custom work done. Additionally youâll only be able to use this method if you want to host it on GitHub Pages, as <a href="https://pages.github.com/themes/">themes canât be submitted</a>â¦ yet.</p>

<p>Using the theme will allow you to receive updates made and will be more programmatic. To make your own changes youâll need to overwrite the files with your own. For example: If I want to change the colours of my site Iâll need to copy the <a href="https://github.com/daviddarnes/alembic/blob/master/_sass/_colors.scss"><code class="language-plaintext highlighter-rouge">_colors.scss</code></a> file and create my own in <code class="language-plaintext highlighter-rouge">_sass/colors.scss</code> with my own changes. This is the same for all files within the theme, which means your own project will be more lean than if you were to use the boilerplate.</p>
:ET